{"version":3,"sources":["images/button.ico","Game.js","Winners.js","Info.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickButton","getDataFromDb","fetch","then","data","json","response","setState","clickAmount","axios","post","update","clicksToNextPrize","state","showWinnerForm","prizeSize","sendForm","event","preventDefault","id","Name","newWinnerName","winningClickNr","buttonIsEnabled","newWinnerOnChange","target","value","length","winnerList","react_default","a","createElement","className","onSubmit","onChange","type","disabled","onClick","React","Component","Winners","isLoading","_this2","map","winners","key","Info","App","BrowserRouter","Link","to","src","logo","alt","width","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8NCoIzBC,cA/Hb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFI,cAAgB,WAEdP,EAAKQ,iBAjBOR,EAoBdQ,cAAgB,WACdC,MAAM,kBACHC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAab,EAAKc,SAAS,CAAEC,YAAaF,EAASF,KAAK,GAAGI,cAE/DC,IAAMC,KAAK,oBAAqB,CAChCC,OAAQ,CAAEH,YAAaF,EAASF,KAAK,GAAGI,YAAc,KAErDL,KAAK,SAAAG,GAEJb,EAAKc,SAAS,CAAEK,kBAAmB,IAAOnB,EAAKoB,MAAML,YAAc,MAIhEf,EAAKoB,MAAML,YAAc,MAAQ,EAClCf,EAAKc,SAAS,CACZO,gBAAgB,EAChBC,UAAW,QAGNtB,EAAKoB,MAAML,YAAc,MAAQ,EACxCf,EAAKc,SAAS,CACZO,gBAAgB,EAChBC,UAAW,WAIPtB,EAAKoB,MAAML,YAAc,MAAQ,GACvCf,EAAKc,SAAS,CACZO,gBAAgB,EAChBC,UAAW,eAlDTtB,EA0DhBuB,SAAW,SAACC,GACVA,EAAMC,iBACNT,IAAMC,KAAK,kBAAmB,CAC5BC,OAAQ,CAAEQ,GAAI1B,EAAKoB,MAAML,YAAa,IAAKY,KAAM3B,EAAKoB,MAAMQ,cAAeN,UAAWtB,EAAKoB,MAAME,UAAWO,eAAgB7B,EAAKoB,MAAML,eAExIL,KAAK,SAAAG,GACJb,EAAKc,SAAS,CACZc,cAAe,GACfP,gBAAgB,EAChBF,kBAAmB,KACnBW,iBAAiB,OApEP9B,EA2Ed+B,kBAAoB,SAACP,GACnBxB,EAAKc,SAAS,CAAEc,cAAeJ,EAAMQ,OAAOC,QACzCT,EAAMQ,OAAOC,MAAMC,OAAS,EAC7BlC,EAAKc,SAAS,CAACgB,iBAAiB,IAEhC9B,EAAKc,SAAS,CAACgB,iBAAiB,KA9ElC9B,EAAKoB,MAAQ,CACXT,KAAM,GACNwB,WAAY,GACZN,eAAgB,EAChBD,cAAe,GACfN,UAAW,GACXH,kBAAmB,KACnBJ,YAAa,EACbM,gBAAgB,EAChBS,iBAAiB,GAXP9B,wEAsFZ,OAAGG,KAAKiB,MAAMC,eAGVe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,8CAAsCnC,KAAKiB,MAAME,UAAjD,UACAc,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAME,SAAUrC,KAAKoB,UACpBa,EAAAC,EAAAC,cAAA,SACEL,MAAO9B,KAAKiB,MAAMQ,cAClBa,SAAUtC,KAAK4B,oBAEjBK,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASC,UAAWxC,KAAKiB,MAAMU,gBAAiBS,UAAW,gBAAmBpC,KAAKiB,MAAMU,gBAAgC,OAAb,aAAzH,YAURM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaK,QAASzC,KAAKI,eAA7C,kBAEF6B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6CAAqCnC,KAAKiB,MAAMD,4BAzHvC0B,IAAMC,WC4CVC,cA5Cb,SAAAA,IAAc,IAAA/C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACZ/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,QACKiB,MAAQ,CACTe,WAAY,GACZa,WAAW,GAJHhD,oFASO,IAAAiD,EAAA9C,KAEnBM,MAAM,mBACHC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAElBF,KAAK,SAAAG,GAAaoC,EAAKnC,SAAS,CAC/BqB,WAAYtB,EAASF,KACrBqC,WAAW,uCAMf,OAGEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,WACCnC,KAAKiB,MAAM4B,WAAaZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,eACvBpC,KAAKiB,MAAM4B,WACXZ,EAAAC,EAAAC,cAAA,UACGnC,KAAKiB,MAAMe,WAAWe,IAAI,SAACC,GAAD,OACzBf,EAAAC,EAAAC,cAAA,MAAIc,IAAKD,EAAQzB,IAAjB,IAAwByB,EAAQxB,kBAnCxBkB,IAAMC,WC8BbO,mLA3BX,OAEEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,0UAOAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,2CAGFF,EAAAC,EAAAC,cAAA,qIAtBWO,IAAMC,4DC8CVQ,mLApCX,OAGElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYb,GAAG,mBAC5BU,EAAAC,EAAAC,cAAA,OAAKZ,GAAG,eACRU,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,KACPrB,EAAAC,EAAAC,cAAA,OAAKoB,IAAKC,IAAMC,IAAI,sBAAsBC,MAAM,QAChDzB,EAAAC,EAAAC,cAAA,2BAGFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,KAAT,aACJrB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,YAAT,YACJrB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,SAAT,aAKZrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlE,IACjCqC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWlB,IAClCX,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWZ,eA9B3BR,IAAMC,WCLxBoB,IAASC,OACP/B,EAAAC,EAAAC,cAAC8B,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.3f09781a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.aff9089c.ico\";","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: [],\r\n      winnerList: [],\r\n      winningClickNr: 0,\r\n      newWinnerName: '',\r\n      prizeSize: '',\r\n      clicksToNextPrize: null,\r\n      clickAmount: 0,\r\n      showWinnerForm: false,\r\n      buttonIsEnabled: false\r\n    }\r\n  }\r\n\r\n  onClickButton = () => {\r\n    //  GET THE TOTAL AMOUNT OF CLICKS AND SET THE STATE OF \"clickAmount\" TO THAT VALUE + 1\r\n    this.getDataFromDb();\r\n  }\r\n\r\n  getDataFromDb = () => {\r\n    fetch(\"/api/getClicks\")\r\n      .then(data => data.json())\r\n      .then(response =>{ this.setState({ clickAmount: response.data[0].clickAmount })\r\n\r\n        axios.post(\"/api/updateClicks\", {\r\n        update: { clickAmount: response.data[0].clickAmount + 1 }\r\n        })\r\n        .then(response => {\r\n          //  CALCULATES AND SETS THE STATE OF THE \"clicksToNextPrize\" VARIAABLE\r\n          this.setState({ clicksToNextPrize: 100 - (this.state.clickAmount % 100) })\r\n\r\n          //  CHECKS IF THE PLAYER WINS A PRIZE AND SETS THE \"showWinnerForm\" TO TRUE SO THAT IT WILL BE RENDERED\r\n          //  CHECKS IF THE PLAYER WINS A 500 CLICKS PRIZE\r\n          if(this.state.clickAmount % 500 === 0){\r\n            this.setState({ \r\n              showWinnerForm: true,\r\n              prizeSize: \"BIG\"\r\n            })\r\n          //  CHECKS IF THE PLAYER WINS A 200 CLICKS PRIZE\r\n          }else if(this.state.clickAmount % 200 === 0){\r\n            this.setState({ \r\n              showWinnerForm: true,\r\n              prizeSize: \"MEDIUM\"\r\n            })\r\n          }\r\n          //  CHECKS IF THE PLAYER WINS A 100 CLICKS PRIZE\r\n          else if(this.state.clickAmount % 100 === 0){\r\n            this.setState({ \r\n              showWinnerForm: true,\r\n              prizeSize: \"SMALL\"\r\n            })\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n//  SENDS THE USER FORM TO THE DATABASE\r\nsendForm = (event) =>{\r\n  event.preventDefault()\r\n  axios.post(\"/api/postWinner\", {\r\n    update: { id: this.state.clickAmount /100, Name: this.state.newWinnerName, prizeSize: this.state.prizeSize, winningClickNr: this.state.clickAmount }\r\n  })\r\n  .then(response => {\r\n    this.setState({\r\n      newWinnerName: '',\r\n      showWinnerForm: false,\r\n      clicksToNextPrize: null,\r\n      buttonIsEnabled: false\r\n    })\r\n    \r\n  })\r\n}\r\n\r\n  //  ONCHANGE OF FORM, SETS STATE OF WINNER NAME AND PREVENTS USER FROM SENDING EMPTY\r\n  newWinnerOnChange = (event) => {\r\n    this.setState({ newWinnerName: event.target.value })\r\n    if(event.target.value.length > 0){\r\n      this.setState({buttonIsEnabled: true})\r\n    }else{\r\n      this.setState({buttonIsEnabled: false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // IF THE \"showWinnerForm\" IS TRUE, THEN WE SHOW THE WINNER FORM, OTHERWISE WE SHOW THE GAME\r\n    if(this.state.showWinnerForm){\r\n      //  WINNERFORM\r\n      return(\r\n        <div className=\"gamePage\">\r\n          <div>\r\n            <h1>Congratulations</h1>\r\n          </div>\r\n          <div>\r\n           <p> Congratiulations. You have won a {this.state.prizeSize} prize</p>\r\n           <p>Please enter your nickname:</p>\r\n           <div>\r\n             <form onSubmit={this.sendForm} >\r\n              <input \r\n                value={this.state.newWinnerName}\r\n                onChange={this.newWinnerOnChange}\r\n              ></input>\r\n              <button type=\"submit\" disabled={!this.state.buttonIsEnabled} className={\"submitButton\" + (!this.state.buttonIsEnabled  ? \"Disabled\" : \"Show\")} >Send</button>\r\n             </form>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    }\r\n    //  THE GAME\r\n    return (\r\n      <div className=\"gamePage\">\r\n        <div>\r\n          <h1>Button Game</h1>\r\n        </div>\r\n        <div>\r\n          <button className=\"gameButton\" onClick={this.onClickButton}>Try Your Luck</button>\r\n        </div>\r\n        <div>\r\n          <p> Amount of clicks to next prize: {this.state.clicksToNextPrize}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game","import React from 'react'\r\n\r\n\r\nclass Winners extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n        winnerList: [],\r\n        isLoading: true\r\n    }\r\n  }\r\n\r\n  //  WHEN COMPONENT MOUN\r\n  componentWillMount() {\r\n    //  GETS THE WINNER NAMES AND SETS \"winnerList\" STATE TO THE WINNER NAMES\r\n    fetch(\"/api/getWinners\")\r\n      .then(data => data.json())\r\n      //  SETS STATE OF \"winnerList\" and \"isLoading\" TO FALSE\r\n      .then(response =>{ this.setState({  \r\n        winnerList: response.data, \r\n        isLoading: false })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //  WHILE LOADING THIS SHOWS A LOADING SPINNER\r\n      //  IF IT HAS LOADED IT WILL SHOW A LIST OF ALL THE WINNERS\r\n      <div className=\"winnerPage\">\r\n        <div>\r\n          <h1>Winners</h1>\r\n        </div>\r\n        <div>\r\n        {this.state.isLoading && <div className=\"loadingSpinner\">Loading...</div>}\r\n        {!this.state.isLoading && (\r\n          <ul>\r\n            {this.state.winnerList.map((winners) => \r\n              <li key={winners.id}> { winners.Name}</li>\r\n            )}\r\n          </ul>\r\n        )}\r\n        </div>\r\n      </div>  \r\n    )\r\n  }\r\n}\r\n\r\nexport default Winners","import React from 'react'\r\n\r\n\r\nclass Info extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    //  INFO PAGE\r\n      <div className=\"infoPage\">\r\n        <div>\r\n          <h1>Info</h1>\r\n        </div>\r\n        <p>The goal of the game is to click the button. \r\n          Every 100 clicks will win a prize. \r\n          Everyone is collectively increasing the counter. \r\n          You are not able to see on how many total clicks the counter is on,\r\n          but after each click you will get to know how many clicks away from a prize you were. \r\n          There are 3 different prize sizes:\r\n        </p>\r\n        <ul>\r\n          <li>100 clicks prize = Small prize</li>\r\n          <li>200 clicks prize = Medium prize</li>\r\n          <li>500 clicks prize = Big prize</li>\r\n        </ul>\r\n\r\n        <p>\r\n          If you are the lucky winner of a prize you can enter your nickname and we will contact you later for your prize.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Info","import React from 'react'\nimport Game from './Game'\nimport Winners from './Winners'\nimport Info from './Info'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './style/style.css';\nimport logo from './images/button.ico';\n\n\nclass App extends React.Component {\n\n  //  MAIN STRUCTURE OF APP\n  render() {\n    return (\n      //  STRUCTURE IS A HEADER THAT IS ON TOP AND PAGECONTAINER IN THE MIDDLE OF THE SITE\n      //  PAGE CONTAINER CHANGES THE CONTENT DEPENDING ON WHAT TAB IS SELECTED\n      <Router>\n        <div>\n          <header>\n            <div className=\"container\" id=\"headerContainer\">\n              <div id=\"headerTitle\">\n              <Link to=\"/\">\n                <img src={logo} alt=\"Picture of a button\" width=\"16%\"/>\n                <h1>Button Game</h1>\n              </Link>\n              </div>\n              <nav>\n                <ul>\n                  <li><Link to=\"/\">The Game</Link></li>\n                  <li><Link to=\"/winners\">Winners</Link></li>\n                  <li><Link to=\"/info\">Info</Link></li>\n                </ul>\n              </nav>\n            </div>\n          </header>\n          <div className=\"container\">\n            <div className=\"pageContainer\">\n              <Route exact path=\"/\" component={Game} />\n              <Route path=\"/winners\" component={Winners} />\n              <Route path=\"/info\" component={Info} />\n            </div>\n\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}